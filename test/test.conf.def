config test_conf {
	enum week_t { MON, TUE, WED, THU, FRI, SAT, SUN }
	enum fruit_t { Apple, Orange, Peach, Lemon }

	required mutable int_val: int[-1000~10000];
   	required const bool_val : bool;
	required week_val	: week_t;
	optional mutable string_val: string;
	optional const real_val	: real;
	required string_list	: list<string>;
	mutable required string0_list	: list[0]<string>;
	mutable required int1_list	: list[1]<int>;
	required bool9_list	: list[9]<bool>;
	required real_llist	: list<list<real>>;
 		 stri_list	: list<string,int>;
		 rib_tuple	: real,int,bool;
		 string_tuple	: ((string));	
		 week_fruits	: week_t,list<fruit_t>;
	optional int_defval	: int = 5;
	optional int_defval2	: int;
	optional uint_defval	: uint = 123;
	optional uint_defval2	: uint;
	optional uint_defval3	: uint = 0xffffffff;
	optional bool_defval	: bool = true;
	optional bool_defval2	: bool;
	optional string_defval	: string = "hello";
	optional string_defval2 : string;
	optional real_defval	: real = 1.0123;
	optional real_defval2	: real;
	optional fruit_def	: fruit_t = Orange;
	#optional fruit_baddef	: fruit_t = FRI;
	optional fruit_def2	: fruit_t;

	optional rib_tuple_def	: real,int,bool = {-3.14,5,false};
	optional rib_tuple_def2	: real,int,bool;
	mutable optional stri_list_def	: list[3]<string,int> = {"hoge",1234},{"hoge",1234},{"hoge",1234};

	optional date_value	: time;
	optional date_value2	: time = 2003/12/31;
	optional date_value3    : time = 2008/1/3 17:20:00;
	optional date_value4    : time;
	optional ipv4_value	: ipv4addr;
	optional ipv4_value2	: ipv4addr = 192.168.0.1;
	optional ipv4_value3	: ipv4addr = 1.2.3.4;
	optional ipv6_value	: ipv6addr;
	optional ipv6_value2	: ipv6addr = dead:beaf::1;
	optional ipv6_value3	: ipv6addr = dead:1234:ffff:ffff:2311:1111:0000:0232;
	optional ipv6_value4	: ipv6addr = ::;
	optional ipv6_value5	: ipv6addr = ::1;
	optional ipv6_value6	: ipv6addr = 1:2:3::;
	optional ipv6_value7	: ipv6addr;

	optional netaddr_val	: ipv4addr,int = 0.0.0.0,24;
	optional net6addr_val	: ipv6addr,int;

	optional datadrstr_vals	: list<time,ipv4addr,string>;

	optional real_ranval	: real[32.5~100.3];
	optional real_ranval2	: real[1.0~];
	optional real_ranval3	: real[~50.0];
	optional int_ranval	: int[-32 ~ -10];
	optional int_ranval2	: int[-32~ 100];
	optional int_ranval3	: int[3~ 100];
	optional int_ranval4	: int[3~ 100];	# default is 3
	optional int_ranval5	: int[-3~ 100];	# default is 0
	optional int_ranval6	: int[-30~-10];	# default is -10
	optional uint_ranval	: uint[32~100];
	optional uint_ranval2	: uint[~100];
	mutable optional uint_ranval3 : uint[100 ~ ];

	mutable optional range_vals	: real[32.5~100.3],uint[100 ~ ],int[~-10] = 32.5, 100, -30;
  	required mutable ranval_list	: list[2]<int[-10~10]>;
}

